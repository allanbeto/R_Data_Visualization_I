knitr::opts_chunk$set(echo = TRUE)
# Load MASS package
library("MASS")
# Plot whiteside data
plot(whiteside)
# Plot Gas vs. Temp
plot(whiteside$Temp, whiteside$Gas, ylab="Heating gas consumption", xlab="Outside temperature")
# Apply the plot() function to Insul
plot(whiteside$Insul)
# Load the MASS package
library("MASS")
# Plot Max.Price vs. Price as red triangles
plot(Cars93$Max.Price, Cars93$Min.Price, pch = 17, col = "red" )
# Plot Max.Price vs. Price as red triangles
plot(Cars93$Max.Price, Cars93$Min.Price, pch = 17, col = "red" )
# Add Min.Price vs. Price as blue circles
plot(Cars93$Max.Price, Cars93$Min.Price, pch = 16, col = "blue" )
# Load the MASS package
library("MASS")
# Plot Max.Price vs. Price as red triangles
plot(Cars93$Price, Cars93$Max.Price, pch = 17, col = "red" )
# Add Min.Price vs. Price as blue circles
points(Cars93$Price, Cars93$Min.Price, pch = 16, col = "blue" )
# Add an equality reference line with abline()
abline(a = 0, b = 1, lty = 2)
knitr::opts_chunk$set(echo = TRUE)
# Load the robustbase package
library("robustbase")
install.packages("robustbase")
packrat::snapshot()
library("robustbase")
# Set up the side-by-side plot array
par(mfrow = c(1,2))
# First plot: brain vs. body in its original form
plot(Animals2$body, Animals2$brain)
# Add the first title
title("Original representation")
# Second plot: log-log plot of brain vs. body
plot(Animals2$body, Animals2$brain, log="xy")
# Add the second title
title("Log-log plot")
# Load the insuranceData package
library("insuranceData")
#install.packages("robustbase")
install.packages("insuranceData")
# Load the insuranceData package
library("insuranceData")
# Use the data() function to get the dataCar data frame
data(dataCar)
# Set up a side-by-side plot array
par(mfrow = c(1,2))
# Create a table of veh_body record counts and sort
tbl <- sort(table(dataCar$veh_body),
decreasing = TRUE)
# Create the pie chart and give it a title
pie(tbl)
title("Pie chart")
# Create the barplot with perpendicular, half-sized labels
barplot(tbl, las = 2, cex.names = 0.5)
# Add a title
title("Bar chart")
packrat::snapshot()
#install.packages("robustbase")
install.packages("insuranceData")
knitr::opts_chunk$set(echo = TRUE)
# Set up a side-by-side plot array
par(mfrow = c(1,2))
# Create a histogram of counts with hist()
hist(Cars93$Horsepower, main="hist() plot")
#install.packages("robustbase")
#install.packages("insuranceData")
# Load MASS package
library("MASS")
# Plot whiteside data
plot(whiteside)
# Plot Gas vs. Temp
plot(whiteside$Temp, whiteside$Gas, ylab="Heating gas consumption", xlab="Outside temperature")
# Apply the plot() function to Insul
plot(whiteside$Insul)
# Load the MASS package
library("MASS")
# Plot Max.Price vs. Price as red triangles
plot(Cars93$Price, Cars93$Max.Price, pch = 17, col = "red" )
# Add Min.Price vs. Price as blue circles
points(Cars93$Price, Cars93$Min.Price, pch = 16, col = "blue" )
# Add an equality reference line with abline()
abline(a = 0, b = 1, lty = 2)
# Load the robustbase package
library("robustbase")
# Set up the side-by-side plot array
par(mfrow = c(1,2))
# First plot: brain vs. body in its original form
plot(Animals2$body, Animals2$brain)
# Add the first title
title("Original representation")
# Second plot: log-log plot of brain vs. body
plot(Animals2$body, Animals2$brain, log="xy")
# Add the second title
title("Log-log plot")
# Load the insuranceData package
library("insuranceData")
# Use the data() function to get the dataCar data frame
data(dataCar)
# Set up a side-by-side plot array
par(mfrow = c(1,2))
# Create a table of veh_body record counts and sort
tbl <- sort(table(dataCar$veh_body),
decreasing = TRUE)
# Create the pie chart and give it a title
pie(tbl)
title("Pie chart")
# Create the barplot with perpendicular, half-sized labels
barplot(tbl, las = 2, cex.names = 0.5)
# Add a title
title("Bar chart")
# Set up a side-by-side plot array
par(mfrow = c(1,2))
# Create a histogram of counts with hist()
hist(Cars93$Horsepower, main="hist() plot")
# Create a normalized histogram with truehist()
truehist(Cars93$Horsepower, main="truehist() plot")
# Create index16, pointing to 16-week chicks
index16 <- which(ChickWeight$Time == 16)
# Get the 16-week chick weights
weights <- ChickWeight$weight[index16]
# Plot the normalized histogram
truehist(weights)
# Add the density curve to the histogram
lines(density(weights))
# Load the car package to make qqPlot() available
library("car")
#install.packages("robustbase")
#install.packages("insuranceData")
installed.packages("car")
#install.packages("robustbase")
#install.packages("insuranceData")
install.packages("car")
packrat::snapshot()
library("car")
# Create index16, pointing to 16-week chicks
index16 <- which(ChickWeight$Time == 16)
# Get the 16-week chick weights
weights <- ChickWeight$weight[index16]
# Show the normal QQ-plot of the chick weights
qqPlot(weights)
# Show the normal QQ-plot of the Boston$tax data
qqPlot(Boston$tax)
# Set up a side-by-side plot array
par(mfrow = c(1,2))
# Create the standard scatterplot
plot(rad ~ zn, data = Boston)
# Add the title
title("Standard scatterplot")
# Create the sunflowerplot
sunflowerplot(rad ~ zn, data = Boston)
# Add the title
title("Sunflower plot")
# Create a variable-width boxplot with log y-axis & horizontal labels
boxplot(crim ~ rad, data = Boston, varwidth = TRUE, log = "y", las =1 )
# Add a title
title("Crime rate vs. radial highway index")
# Create a mosaic plot using the formula interface
mosaicplot(carb ~ cyl, data = mtcars)
boxplot(Min.Price ~ Max.Price, data = Cars93)
# Load aplpack to make the bagplot() function available
library("aplpack")
#install.packages("robustbase")
#install.packages("insuranceData")
#install.packages("car")
install.packages("aplpack")
# Create a side-by-side boxplot summary
boxplot(Cars93$Min.Price, Cars93$Max.Price)
# Load aplpack to make the bagplot() function available
library("aplpack")
# Create a side-by-side boxplot summary
boxplot(Cars93$Min.Price, Cars93$Max.Price)
# Load aplpack to make the bagplot() function available
library("aplpack")
# Create a bagplot for the same two variables
bagplot(Cars$Min.Price, Cars93$Max.Price, cex = 1.2)
# Create a side-by-side boxplot summary
boxplot(Cars93$Min.Price, Cars93$Max.Price)
# Load aplpack to make the bagplot() function available
library("aplpack")
# Create a bagplot for the same two variables
bagplot(Cars93$Min.Price, Cars93$Max.Price, cex = 1.2)
# Add an equality reference line
abline(a=0, b=1, lty = 2)
# Load the corrplot library for the corrplot() function
library("corrplot")
#install.packages("robustbase")
#install.packages("insuranceData")
#install.packages("car")
#install.packages("aplpack")
install.packages("corrplot")
# Load the corrplot library for the corrplot() function
library("corrplot")
# Extract the numerical variables from UScereal
numericalVars <- UScereal[,2:10]
# Compute the correlation matrix for these variables
corrMat <- cor(numericalVars)
# Generate the correlation ellipse plot
corrplot(corrMat, method = "ellipse" )
#install.packages("robustbase")
#install.packages("insuranceData")
#install.packages("car")
#install.packages("aplpack")
#install.packages("corrplot")
install.packages("rpart")
# Load the robustbase package
library("robustbase")
# Set up the side-by-side plot array
par(mfrow = c(1,2))
# First plot: brain vs. body in its original form
plot(Animals2$body, Animals2$brain)
# Add the first title
title("Original representation")
# Second plot: log-log plot of brain vs. body
plot(Animals2$body, Animals2$brain, log="xy")
# Add the second title
title("Log-log plot")
library("insuranceData")
# Use the data() function to get the dataCar data frame
data(dataCar)
# Set up a side-by-side plot array
par(mfrow = c(1,2))
# Create a table of veh_body record counts and sort
tbl <- sort(table(dataCar$veh_body),
decreasing = TRUE)
# Create the pie chart and give it a title
pie(tbl)
title("Pie chart")
# Create the barplot with perpendicular, half-sized labels
barplot(tbl, las = 2, cex.names = 0.5)
# Add a title
title("Bar chart")
par(mfrow = c(1,2))
# Create a histogram of counts with hist()
hist(Cars93$Horsepower, main="hist() plot")
# Create a normalized histogram with truehist()
truehist(Cars93$Horsepower, main="truehist() plot")
par(mfrow = c(1,2))
# Create the standard scatterplot
plot(rad ~ zn, data = Boston)
# Add the title
title("Standard scatterplot")
# Create the sunflowerplot
sunflowerplot(rad ~ zn, data = Boston)
# Add the title
title("Sunflower plot")
